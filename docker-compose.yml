services:
# WebSocket backend
    room:
        image: stzups/room
        build:
            context: room
        ports:
            - "8080:80"
        depends_on:
            postgres:
                condition: service_healthy
#            keydb:
#                condition: service_healthy
        environment:
            scribbleshare.ssl: "false"
            scribbleshare.postgres.url: "jdbc:postgresql://postgres:5432/scribbleshare"
            scribbleshare.postgres.user: "scribbleshare_room"
            scribbleshare.postgres.password: "changeme"
            scribbleshare.domain: "scribbleshare.com:8080"
            scribbleshare.origin: "http://scribbleshare.com"
#            scribbleshare.redis.url: "redis://default:changeme@scribbleshare-keydb:6379"
# App backend
    app:
        image: stzups/app
        ports:
            - "80:80"
        build:
            context: app
        depends_on:
            postgres:
                condition: service_healthy
#            keydb:
#                condition: service_healthy
        environment:
            scribbleshare.ssl: "false"
            scribbleshare.postgres.url: "jdbc:postgresql://postgres:5432/scribbleshare"
            scribbleshare.postgres.user: "scribbleshare_backend"
            scribbleshare.postgres.password: "changeme"
            scribbleshare.domain: "scribbleshare.com"
            scribbleshare.origin: "http://scribbleshare.com"
#            scribbleshare.redis.url: "redis://default:changeme@scribbleshare-keydb:6379"
# Reverse proxy
#    nginx:
#        image: nginx
#        networks:
#            - network
#            - external-network
#        build:
#            context: nginx
#        depends_on:
#            app:
#                condition: service_healthy
#        ports:
#            - "80:80"
# Database
    postgres:
        image: postgres
        volumes:
            - ./postgres/sql:/docker-entrypoint-initdb.d/
#        ports:
#            - "5432:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_PASSWORD: "changeme"
#    keydb:
#        image: eqalpha/keydb
#        ports:
#            - "6379:6379"
#        volumes:
#            - ./keydb/usr/local/etc/redis/redis.conf
#        healthcheck:
#            test: [ "CMD", "keydb-cli", "ping" ]
#            interval: 5s
#            timeout: 5s
#            retries: 5